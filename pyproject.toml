[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "vpa"
description = "VPA - Virtual Personal Assistant"
authors = [{name = "Karl Botha"}]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]
dependencies = [
    "aiohappyeyeballs>=2.6.1",
    "aiohttp>=3.12.14",
    "aiosignal>=1.4.0",
    "anyio>=4.9.0",
    "attrs>=25.3.0",
    "certifi>=2025.7.14",
    "cffi>=1.17.1",
    "click>=8.2.1",
    "colorama>=0.4.6",
    "comtypes>=1.4.11;platform_system=='Windows'",
    "coverage>=7.9.2",
    "cryptography>=45.0.5",
    "edge-tts>=7.0.2",
    "frozenlist>=1.7.0",
    "idna>=3.10",
    "iniconfig>=2.1.0",
    "multidict>=6.6.3",
    "packaging>=25.0",
    "pluggy>=1.6.0",
    "propcache>=0.3.2",
    "psutil>=7.0.0",
    "pycparser>=2.22",
    "pygame>=2.6.1",
    "Pygments>=2.19.2",
    "pypiwin32>=223;platform_system=='Windows'",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pyttsx3>=2.99",
    "pywin32>=311;platform_system=='Windows'",
    "PyYAML>=6.0.2",
    "sniffio>=1.3.1",
    "srt>=3.5.3",
    "tabulate>=0.9.0",
    "typing_extensions>=4.14.1",
    "yarl>=1.20.1",
]

[project.scripts]
vpa = "vpa.__main__:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0", 
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "coverage>=7.9.2",
]

[tool.setuptools]
packages = ["vpa", "audio"]
package-dir = {"" = "src"}

[tool.setuptools_scm]
write_to = "src/vpa/_version.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-config",
    "--strict-markers",
    "--cov=src/vpa",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]